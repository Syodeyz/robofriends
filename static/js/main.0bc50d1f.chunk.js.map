{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBar.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","Scroll","props","children","SearchBar","searchField","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAYeA,EAVF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,2DAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,kCAA6BL,EAA7B,mBACpB,4BAAIC,IACJ,4BAAIC,QCeDI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEAV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGV,UCAxBW,EARA,SAACC,GACZ,OACI,qBAAKT,UAAU,iCAAf,SACKS,EAAMC,YCQJC,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,8BACI,uBAAOb,UAAU,+CAA+Cc,KAAK,SACrEC,YAAY,gBACZC,SAAWH,OC6CNI,G,wDA7Cf,aAAc,IAAD,8BACX,gBAYFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACR,YAAaO,EAAME,OAAOC,SAZzC,EAAKC,MAAQ,CACXnB,OAAQ,GACRQ,YAAa,IAJJ,E,qDAiBb,WAAoB,IAAD,OACjBY,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAAChB,OAAQwB,S,oBAKzC,WAAS,IAAD,EACwBC,KAAKN,MAA5BnB,EADD,EACCA,OAAQQ,EADT,EACSA,YACTkB,EAAiB1B,EAAO2B,QAAO,SAAAC,GACnC,OAAOA,EAAMlC,KAAKmC,cAAcC,SAAStB,EAAYqB,kBAGvD,OAAQ7B,EAAO+B,OAGX,sBAAKnC,UAAU,SAAf,UACE,6CACA,cAAC,EAAD,CAAWa,aAAegB,KAAKX,iBAC/B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUd,OAAQ0B,SANtB,8D,GAjCYM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,8BACE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAMxBX,M","file":"static/js/main.0bc50d1f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({id, name, email}) => {\n    return (\n        <div className=\"card bg-light-green dib br3 pa3 ma2 grow tc bw2 shadow-5\">\n            <img alt=\"robot\" src={`https://robohash.org/id/${id}?size=250x250`}></img>\n            <p>{name}</p>\n            <p>{email}</p>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return ( \n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card\n                        key={robots[i].id} //while looping always give a unique key\n                        id={robots[i].id}\n                        name={robots[i].name}\n                        email={robots[i].email}\n                        />\n                    );    \n                })\n            }    \n        </div>\n    );\n}\n    \nexport default CardList;\n","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div className=\" b--solid bw3 b--lightest-blue\">\n            {props.children}\n        </div>\n        \n    );\n}\nexport default Scroll;","import React from 'react';\n\nconst SearchBar = ({searchField, searchChange}) => {\n    return (\n        <div>\n            <input className=\"searchBar bg-light-blue pa3 ma3 br2 shadow-5\" type=\"search\" \n            placeholder=\"search robots\"\n            onChange={ searchChange }\n            />\n        </div>\n    );\n}\n\nexport default SearchBar;","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport Scroll from '../components/Scroll';\nimport SearchBar from '../components/SearchBar';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      robots: [],\n      searchField: ''\n    }\n  }\n  \n  /**\n  * a method that gives the current value of the searchfield onChange.\n  * @returns string typed in searchfield\n  */\n  \n  onSearchChange = (event) => {\n    this.setState({searchField: event.target.value});\n  }\n  \n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => {this.setState({robots: users})});\n  }\n  \n  \n  \n  render(){\n    const {robots, searchField} = this.state; \n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    \n    return !robots.length ? \n      <h1>Loading your RoboFriends</h1> : \n      (\n        <div className=\"App tc\">\n          <h1>RoboFriends</h1>\n          <SearchBar searchChange={ this.onSearchChange }/>\n          <Scroll>\n          <CardList robots={filteredRobots}/>\n          </Scroll>\n        </div>\n      )\n    }\n  }\n  \n  export default App;\n  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <div>\n    <App />\n  </div>,\n\n  document.getElementById('root')\n  );\n  \n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  reportWebVitals();\n  "],"sourceRoot":""}